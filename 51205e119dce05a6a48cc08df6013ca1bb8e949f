{
  "comments": [
    {
      "key": {
        "uuid": "001741ed_abd0d293",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-27T07:50:46Z",
      "side": 1,
      "message": "Also: Please help add more details to commit message on __why__ this is needed.",
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3226b12d_3d900269",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-25T20:42:59Z",
      "side": 1,
      "message": "Why?  This seems like breaking a pretty critical abstraction if LEDs now need to be aware of an interface specific thing.\n\nCould you please include a lot more detail here on why this is needed?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e289bc91_7b15cade",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-26T11:36:58Z",
      "side": 1,
      "message": "Because when we enabled `lamp-test`, we need to rely on libpldm to communicate with host and notify it to perform lamp test.\nI will discuss with @Vishwa whether this feature can be put into the *.bbappend file.",
      "parentUuid": "3226b12d_3d900269",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e18eb235_c174aee1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-26T15:50:35Z",
      "side": 1,
      "message": "\u003e Because when we enabled `lamp-test`, we need to rely on libpldm to communicate with host and notify it to perform lamp test.\n\nIf I understand correctly, you rely on PLDM to communicate with the host, not necessarily the underlying library.  the PLDM dependencies should stay in the PLDM daemon, and be exposed through well defined libraries.  Every daemon that needs PLDM shouldn\u0027t require a dependency on libpldm, similar to how IPMI or redfish are implemented.\n\n\u003e I will discuss with @Vishwa whether this feature can be put into the *.bbappend file.\n\nPlease don\u0027t do this, please architect your dependencies properly, and isolate the complexity of pldm in the pldm daemon, similar to how we do other things with other similar requirements.",
      "parentUuid": "e289bc91_7b15cade",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aaffbcf_e614d84f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-27T07:48:37Z",
      "side": 1,
      "message": "I have not gone through reviewing this commit yet.. But here is the requirement for IBM systems. We need a command sent up to the host ( using PLDM now ) to tell them the LEDs of external drawers be lit up as part of lamp test feature\n\nSo, how do do we it : use BMC-PLDM requester model.\n\nFor BMC-PLDM requester model, the PLDM design does not involve PLDM daemon. Instead, it is like this : \n\nhttps://github.com/openbmc/pldm/blob/master/README.md\n\n- section: BMC as PLDM requester\n\nSo, we would need to put a dependency on things that are needed to make it happen. I don\u0027t want to put it in the base version. Instead, a machine specific bbappend seems right..\n\nIf you have comments, please let me know.. Thanks.",
      "parentUuid": "e18eb235_c174aee1",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67b7979a_1175aa29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-27T15:58:52Z",
      "side": 1,
      "message": "If you need an LED that\u0027s available through PLDM, why doesn\u0027t the PLDM daemon host an LED interface that can be written, the same way we\u0027d do it for any other interface?  If we had LEDs available over IPMB, we wouldn\u0027t add an IPMB dependency to led manager, nor would we add a redfish dependency if we wanted an LED available through redfish host interface.  If we did that, then every module in the system would rely on every interface, which is why we abstract things to well defined interfaces.",
      "parentUuid": "1aaffbcf_e614d84f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a47b8c54_6d3bc29e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-28T07:30:04Z",
      "side": 1,
      "message": "It\u0027s not to be seen as tied to LED.. it\u0027s a message to be sent to the Host and Host interpreting it and taking action. In this case, the action happens to be to light all the LEDs of externally attached drawers.  Tomorrow, that action cab be anything for that matter.\n\nIf PLDM had to do that for every other requester, PLDM would end up hosting many thing on someone else\u0027s behalf and hence the PLDM came up with \"BMC As Requester\" design. \n\nAgain, majority of use cases are covered by standard PLDM daemon and we don\u0027t have to have this dependency. However, some corner cases like this demands BMC as requester flow.\n\nHave you has a chance to look at : https://github.com/openbmc/pldm/blob/master/README.md\n\nFor example, IBM systems have like 100 LEDs and we don\u0027t have this dependency and they are covered using standard PLDM interfaces.",
      "parentUuid": "67b7979a_1175aa29",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5cb94fa_733f2696",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-28T08:40:40Z",
      "side": 1,
      "message": "Yes, I agree with @Vishwa.\ne.g: phosphor-logging, link with:\nhttps://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-phosphor/logging/phosphor-logging_git.bb#L99\nwhen it enabled `openpower-pels` in the bbappend file, it will be using the common method in pldm library, like this:\nhttps://github.com/openbmc/phosphor-logging/blob/master/extensions/openpower-pels/pldm_interface.cpp#L94\n\nThe meaning of generating the `libpldm` library in the PLDM daemon is for other reops to use these methods.",
      "parentUuid": "a47b8c54_6d3bc29e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f2c2c2b_d23de167",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-28T10:58:12Z",
      "side": 1,
      "message": "@Vishwa - maybe I or someone should clarify the concept of PLDM requester apps in the PLDM design document. These apps should be the exception (very few IBM specific cases) to the rule of defining D-Bus interfaces which the PLDM daemon should implement.\n\nIn this case (I might be missing details) I think the \u0027lamp test\u0027 can be represented as a logical effecter by IBM\u0027s host firmware. Next, you would have a D-Bus API to perform the lamp test, which the PLDM daemon would implement (the implementation would call a \u0027SetEffecter\u0027 PLDM command on the logical lamp test effecter).",
      "parentUuid": "d5cb94fa_733f2696",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc7c8aa6_738097d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-28T11:38:41Z",
      "side": 1,
      "message": "Deepak, thanks for clarifying this. We had this discussion with Tom and it was recommended that we do what soft-off did. I am adding Tom to the review.\n\nDeepak, the new interface that you coined here, how can that be used for generic SetEffector ?.. lamp test usecase needs SetNumericHostStateEffector with effector id: 19 for example. \n Similarly. someone else might have a different need. \n\nSO the API will take \n- what kind of effector is that\n- what is its ID etc\n- What is the value",
      "parentUuid": "0f2c2c2b_d23de167",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "51205e119dce05a6a48cc08df6013ca1bb8e949f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}