{
  "comments": [
    {
      "key": {
        "uuid": "10304a36_c7808984",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2019-10-15T17:13:47Z",
      "side": 1,
      "message": "I\u0027m open to transitioning the layout to read-only, mounting the rwfs on /var and making /etc the only directory like is done on UBI and eMMC (proposed) design.\n\nNote that, while they don\u0027t list it, systemd doesn\u0027t late mount of /etc except from read-only to read-write.",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd9a18bb_479f0c1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2019-10-15T18:32:17Z",
      "side": 1,
      "message": "Good thing /etc should be read-only, and runtime state should be in /var/lib. This is something I want to push for moving forward, so we have no dependence on the rwfs to get booting.",
      "parentUuid": "10304a36_c7808984",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "198deb4a_44a97be5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2019-10-15T17:13:47Z",
      "side": 1,
      "message": "pivot",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdbf1490_c7865649",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2019-10-15T18:32:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "198deb4a_44a97be5",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9aed82f_4ad4885b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2019-10-15T17:13:47Z",
      "side": 1,
      "message": "Why would you want to make your known integrated filesytem a module?\n\nUsing modules in an embedded environment where the hardware and file system requirements are well known only increases resource utilization, from the overhead of module referencs, to file system overhead, but also each module has multiple sections rounded up to page alignment or greater.\n\nYocto builds a custom image for the system being targeted.  I understand some what to support multiple related systems, but how many need to support different BMC storage in one build?",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8703fb80_852faeed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2019-10-15T18:32:17Z",
      "side": 1,
      "message": "This is still optional, but so far I\u0027ve shaved off 1.5MB of compressed kernel space by switching to modules. For those with fast spi busses this is less of a big deal, but for us it results in a couple of seconds of savings at load time and then more at initialization time as we can delay loading only the things we need. The rwfs is maybe not the most useful target of this when it is serially being mounted in the initd, but once we can move it to lazy loading it\u0027s code that isn\u0027t needed prior to the availability of squashfs. I\u0027m not worried about the slight memory overhead due to our system constraints.",
      "parentUuid": "e9aed82f_4ad4885b",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6744a6_6a3b8afd",
        "filename": "recipes-phosphor/initrdscripts/files/obmc-init.sh",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2019-10-15T17:13:47Z",
      "side": 1,
      "message": "Why not create a simple symlink if ! -e /lib/modules ?\n\nAlso, I seem to remember an optional security \"feature\" that would lock the filesystem of the\nfirst loaded module, how would that interact?  Or did that die?\n\nAlso, notice in this script we know rodir is known to be well behaved and $rodir is not quoted.",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcb7aada_3c06318d",
        "filename": "recipes-phosphor/initrdscripts/files/obmc-init.sh",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2019-10-15T18:32:17Z",
      "side": 1,
      "message": "Yeah, I could use a symlink since I\u0027m unmounting before pivoting. Yeah, I can remove the quotes if that\u0027s the convention. Never heard about that type of security feature.",
      "parentUuid": "4a6744a6_6a3b8afd",
      "revId": "2260a7048a32e4b7682f6a3a4757963b651ac35b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}